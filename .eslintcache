[{"C:\\Users\\leo\\Desktop\\Capstone Project\\web-street-efficient\\src\\index.js":"1","C:\\Users\\leo\\Desktop\\Capstone Project\\web-street-efficient\\src\\App.js":"2","C:\\Users\\leo\\Desktop\\Capstone Project\\web-street-efficient\\src\\reportWebVitals.js":"3","C:\\Users\\leo\\Desktop\\Capstone Project\\web-street-efficient\\src\\components\\courierLogin.js":"4","C:\\Users\\leo\\Desktop\\Capstone Project\\web-street-efficient\\src\\components\\courierlogin.js":"5","C:\\Users\\leo\\Desktop\\Capstone Project\\web-street-efficient\\src\\components\\Courierlogin.js":"6","C:\\Users\\leo\\Desktop\\Capstone Project\\web-street-efficient\\src\\components\\UserLogin.js":"7","C:\\Users\\leo\\Desktop\\Capstone Project\\web-street-efficient\\src\\components\\InputNewPwd.js":"8","C:\\Users\\leo\\Desktop\\Capstone Project\\web-street-efficient\\src\\store\\reducers\\rootReducer.js":"9","C:\\Users\\leo\\Desktop\\Capstone Project\\web-street-efficient\\src\\config\\fbConfig.js":"10","C:\\Users\\leo\\Desktop\\Capstone Project\\web-street-efficient\\src\\store\\reducers\\courierReducer.js":"11","C:\\Users\\leo\\Desktop\\Capstone Project\\web-street-efficient\\src\\store\\actions\\courierAction.js":"12","C:\\Users\\leo\\Desktop\\Capstone Project\\web-street-efficient\\src\\components\\Home.js":"13","C:\\Users\\leo\\Desktop\\Capstone Project\\web-street-efficient\\src\\components\\Items.js":"14","C:\\Users\\leo\\Desktop\\Capstone Project\\web-street-efficient\\src\\components\\NavigationHeader.js":"15","C:\\Users\\leo\\Desktop\\Capstone Project\\web-street-efficient\\src\\components\\RidersMap.js":"16","C:\\Users\\leo\\Desktop\\Capstone Project\\web-street-efficient\\src\\components\\OfficeEmployees.js":"17","C:\\Users\\leo\\Desktop\\Capstone Project\\web-street-efficient\\src\\components\\DispatchRiders.js":"18","C:\\Users\\leo\\Desktop\\Capstone Project\\web-street-efficient\\src\\components\\UserProfile.js":"19","C:\\Users\\leo\\Desktop\\Capstone Project\\web-street-efficient\\src\\components\\AddOfficeEmployee.js":"20","C:\\Users\\leo\\Desktop\\Capstone Project\\web-street-efficient\\src\\store\\reducers\\officeEmployeeReducer.js":"21","C:\\Users\\leo\\Desktop\\Capstone Project\\web-street-efficient\\src\\store\\actions\\officeEmployeeAction.js":"22","C:\\Users\\leo\\Desktop\\Capstone Project\\web-street-efficient\\src\\components\\AddDispatchRider.js":"23","C:\\Users\\leo\\Desktop\\Capstone Project\\web-street-efficient\\src\\store\\reducers\\dispatchRiderReducer.js":"24","C:\\Users\\leo\\Desktop\\Capstone Project\\web-street-efficient\\src\\components\\CustomsStyles.js":"25","C:\\Users\\leo\\Desktop\\Capstone Project\\web-street-efficient\\src\\store\\actions\\dispatchRiderAction.js":"26","C:\\Users\\leo\\Desktop\\Capstone Project\\web-street-efficient\\src\\components\\AddItem.js":"27","C:\\Users\\leo\\Desktop\\Capstone Project\\web-street-efficient\\src\\store\\reducers\\itemReducer.js":"28","C:\\Users\\leo\\Desktop\\Capstone Project\\web-street-efficient\\src\\store\\actions\\itemAction.js":"29","C:\\Users\\leo\\Desktop\\Capstone Project\\web-street-efficient\\src\\components\\AddItemToPrint.js":"30","C:\\Users\\leo\\Desktop\\Capstone Project\\web-street-efficient\\src\\components\\ItemPrint.js":"31","C:\\Users\\leo\\Desktop\\Capstone Project\\web-street-efficient\\src\\components\\AssignRiderInItem.js":"32","C:\\Users\\leo\\Desktop\\Capstone Project\\web-street-efficient\\src\\components\\TableColumns.js":"33","C:\\Users\\leo\\Desktop\\Capstone Project\\web-street-efficient\\src\\components\\SelectAssignRider.js":"34","C:\\Users\\leo\\Desktop\\Capstone Project\\web-street-efficient\\src\\components\\EntryItems.js":"35","C:\\Users\\leo\\Desktop\\Capstone Project\\web-street-efficient\\src\\components\\AllItems.js":"36","C:\\Users\\leo\\Desktop\\Capstone Project\\web-street-efficient\\src\\components\\DeliveredItems.js":"37","C:\\Users\\leo\\Desktop\\Capstone Project\\web-street-efficient\\src\\components\\ReturnedItems.js":"38","C:\\Users\\leo\\Desktop\\Capstone Project\\web-street-efficient\\src\\components\\OfficeEmpInfo.js":"39"},{"size":2201,"mtime":1614725973896,"results":"40","hashOfConfig":"41"},{"size":2812,"mtime":1615121133692,"results":"42","hashOfConfig":"41"},{"size":362,"mtime":499162500000,"results":"43","hashOfConfig":"41"},{"size":694,"mtime":1612395941090,"results":"44","hashOfConfig":"41"},{"size":694,"mtime":1612395941090,"results":"45","hashOfConfig":"41"},{"size":2027,"mtime":1613062895276,"results":"46","hashOfConfig":"41"},{"size":2636,"mtime":1613176296662,"results":"47","hashOfConfig":"41"},{"size":1597,"mtime":1613180094105,"results":"48","hashOfConfig":"41"},{"size":658,"mtime":1613956956265,"results":"49","hashOfConfig":"41"},{"size":644,"mtime":1613875849733,"results":"50","hashOfConfig":"41"},{"size":2171,"mtime":1614725438254,"results":"51","hashOfConfig":"41"},{"size":5128,"mtime":1614725438315,"results":"52","hashOfConfig":"41"},{"size":2104,"mtime":1614705089679,"results":"53","hashOfConfig":"41"},{"size":2495,"mtime":1615011509404,"results":"54","hashOfConfig":"41"},{"size":3321,"mtime":1615104697863,"results":"55","hashOfConfig":"41"},{"size":4079,"mtime":1614934615990,"results":"56","hashOfConfig":"41"},{"size":5396,"mtime":1615121128619,"results":"57","hashOfConfig":"41"},{"size":399,"mtime":1613278535971,"results":"58","hashOfConfig":"41"},{"size":164,"mtime":1612753044876,"results":"59","hashOfConfig":"41"},{"size":9881,"mtime":1614049034659,"results":"60","hashOfConfig":"41"},{"size":1081,"mtime":1615120778417,"results":"61","hashOfConfig":"41"},{"size":1589,"mtime":1615120778417,"results":"62","hashOfConfig":"41"},{"size":18769,"mtime":1614285803941,"results":"63","hashOfConfig":"41"},{"size":1095,"mtime":1613758703828,"results":"64","hashOfConfig":"41"},{"size":1919,"mtime":1613888816118,"results":"65","hashOfConfig":"41"},{"size":2099,"mtime":1613758706902,"results":"66","hashOfConfig":"41"},{"size":14434,"mtime":1614719159077,"results":"67","hashOfConfig":"41"},{"size":1449,"mtime":1614733536404,"results":"68","hashOfConfig":"41"},{"size":2637,"mtime":1614915245722,"results":"69","hashOfConfig":"41"},{"size":3426,"mtime":1614490628680,"results":"70","hashOfConfig":"41"},{"size":1915,"mtime":1614286119418,"results":"71","hashOfConfig":"41"},{"size":7049,"mtime":1615101124338,"results":"72","hashOfConfig":"41"},{"size":2701,"mtime":1615118112325,"results":"73","hashOfConfig":"41"},{"size":10505,"mtime":1614935145244,"results":"74","hashOfConfig":"41"},{"size":8763,"mtime":1615118112325,"results":"75","hashOfConfig":"41"},{"size":159,"mtime":1615007863622,"results":"76","hashOfConfig":"41"},{"size":178,"mtime":1615007863585,"results":"77","hashOfConfig":"41"},{"size":174,"mtime":1615007863623,"results":"78","hashOfConfig":"41"},{"size":181,"mtime":1615121133691,"results":"79","hashOfConfig":"41"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},"1wwc3yu",{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"82"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"82"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"82"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"150","messages":"151","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"82"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"82"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\leo\\Desktop\\Capstone Project\\web-street-efficient\\src\\index.js",[],["164","165"],"C:\\Users\\leo\\Desktop\\Capstone Project\\web-street-efficient\\src\\App.js",[],"C:\\Users\\leo\\Desktop\\Capstone Project\\web-street-efficient\\src\\reportWebVitals.js",[],"C:\\Users\\leo\\Desktop\\Capstone Project\\web-street-efficient\\src\\components\\courierLogin.js",[],"C:\\Users\\leo\\Desktop\\Capstone Project\\web-street-efficient\\src\\components\\courierlogin.js",[],"C:\\Users\\leo\\Desktop\\Capstone Project\\web-street-efficient\\src\\components\\Courierlogin.js",[],"C:\\Users\\leo\\Desktop\\Capstone Project\\web-street-efficient\\src\\components\\UserLogin.js",[],"C:\\Users\\leo\\Desktop\\Capstone Project\\web-street-efficient\\src\\components\\InputNewPwd.js",[],"C:\\Users\\leo\\Desktop\\Capstone Project\\web-street-efficient\\src\\store\\reducers\\rootReducer.js",[],"C:\\Users\\leo\\Desktop\\Capstone Project\\web-street-efficient\\src\\config\\fbConfig.js",[],"C:\\Users\\leo\\Desktop\\Capstone Project\\web-street-efficient\\src\\store\\reducers\\courierReducer.js",[],"C:\\Users\\leo\\Desktop\\Capstone Project\\web-street-efficient\\src\\store\\actions\\courierAction.js",[],"C:\\Users\\leo\\Desktop\\Capstone Project\\web-street-efficient\\src\\components\\Home.js",[],"C:\\Users\\leo\\Desktop\\Capstone Project\\web-street-efficient\\src\\components\\Items.js",[],"C:\\Users\\leo\\Desktop\\Capstone Project\\web-street-efficient\\src\\components\\NavigationHeader.js",[],"C:\\Users\\leo\\Desktop\\Capstone Project\\web-street-efficient\\src\\components\\RidersMap.js",["166"],"import React, {useState, useEffect} from 'react'\r\nimport fire from '../config/fbConfig' \r\nimport {MapContainer, TileLayer, Marker, Popup} from 'react-leaflet'\r\nimport { Icon } from 'leaflet';\r\n\r\nexport const icon = new Icon({\r\n    iconUrl: '/images/sfhelmet.png',\r\n    iconSize: [80, 50]\r\n  });\r\n\r\n\r\nfunction RidersMap() {\r\n    const [riders , setRiders] = useState([]);\r\n    const [loading , setLoading] = useState(false);\r\n    //const [ridersdata, setRidersdata] = useState();\r\n    \r\n    const ref = fire.firestore().collection(\"DispatchRiders_Position\")\r\n    function getRiderLocation(){\r\n       setLoading(true); \r\n        ref.onSnapshot((querySnapshot) => {  \r\n                var riderdata= [];   \r\n                     \r\n                querySnapshot.forEach((doc) => {  \r\n                    riderdata.push(doc.data());\r\n                    // var rider_id = doc.data().rider_id;\r\n                    // var latitude = doc.data().latitude;\r\n                    // var longitude = doc.data().longitude;\r\n                    // var riderObj = [];\r\n                    // var docRef = fire.firestore().collection(\"Dispatch Riders\").doc(rider_id);\r\n                    // docRef.get().then((doc) => {\r\n                    //     if (doc.exists) {\r\n                    //         riderObj.push({\r\n                    //             fname: doc.data().fname,\r\n                    //             lname: doc.data().lname,\r\n                    //             mname: doc.data().mname,\r\n                    //             contactNumber: doc.data().contactNumber,\r\n                    //             vehicle_type: doc.data().vehicle_type,\r\n                    //         });\r\n                            \r\n                            // riderdata.push(riderObj);           \r\n                            // setRiderdata(riderdata =>[...riderdata, {\r\n                            //     rider_id,\r\n                            //     latitude ,\r\n                            //     longitude,\r\n                            //     fname: doc.data().fname,\r\n                            //     lname: doc.data().lname,\r\n                            //     mname: doc.data().mname,\r\n                            //     contactNumber: doc.data().contactNumber,\r\n                            //     vehicle_type: doc.data().vehicle_type,\r\n                            // }]);                          \r\n                    //     } \r\n                    // });  \r\n                    // riderdata.push({rider_id, latitude, longitude)                                                \r\n                });\r\n               \r\n                setRiders(riderdata);\r\n                setLoading(false);\r\n            });                 \r\n    }\r\n\r\n    useEffect(() => {\r\n        getRiderLocation();\r\n    }, [])\r\n\r\n    if(loading){\r\n        return <p>loading.....</p>\r\n    }\r\n    \r\n    console.log(riders);\r\n\r\n    return (\r\n        <MapContainer center={[10.3321, 123.9357]} zoom={12}>\r\n            <TileLayer\r\n                url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n                attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n            />  \r\n            {riders.map(rider => (\r\n                <Marker\r\n                    key={rider.rider_id}\r\n                    position={[\r\n                        rider.latitude,\r\n                        rider.longitude\r\n                    ]}\r\n                    icon={icon}\r\n                >\r\n                    <Popup position={[ rider.latitude, rider.longitude]} >\r\n                        <div>\r\n                            <p>Name: {rider.rider_name }\r\n                                <br/>\r\n                                Phone: {rider.rider_contactNumber}\r\n                                <br/>\r\n                                Vehicle Type: {rider.vehicle_type}\r\n                            </p>\r\n                        </div>\r\n                    </Popup>\r\n                    \r\n                 </Marker>\r\n            ))}\r\n\r\n        </MapContainer>\r\n    )\r\n}\r\n\r\nexport default RidersMap\r\n\r\n","C:\\Users\\leo\\Desktop\\Capstone Project\\web-street-efficient\\src\\components\\OfficeEmployees.js",["167"],"C:\\Users\\leo\\Desktop\\Capstone Project\\web-street-efficient\\src\\components\\DispatchRiders.js",[],"C:\\Users\\leo\\Desktop\\Capstone Project\\web-street-efficient\\src\\components\\UserProfile.js",[],"C:\\Users\\leo\\Desktop\\Capstone Project\\web-street-efficient\\src\\components\\AddOfficeEmployee.js",["168"],"import React, { useState, useEffect } from 'react'\r\nimport {addOfficeEmployee} from '../store/actions/officeEmployeeAction'\r\nimport { activeTextSwitch, inactiveTextSwitch } from './CustomsStyles';\r\n\r\n//import '../styles/AddOfficeEmployee.scss'\r\n\r\nimport DatePicker from 'react-datepicker'\r\nimport 'react-datepicker/dist/react-datepicker.css'\r\nimport Select from 'react-select'\r\nimport Switch from 'react-switch'\r\nimport { connect } from 'react-redux'\r\n\r\n\r\nconst AddOfficeEmployee = (props) => {\r\n    const {show, close, branches, courierID, addOffice_Emp_Error, auth} = props\r\n    const [checked, setChecked] = useState(false)//for status\r\n    let displayName = auth.displayName;\r\n    let encodedBY = displayName.split(\"@\");\r\n\r\n\r\n    const [officeEmployeeSignup, setOfficeEmployeeSignup] = useState({\r\n        email : '',\r\n        fname : '',\r\n        mname :'',\r\n        lname :'',\r\n        address: '',\r\n        contactNumber: '',\r\n        birthdate: null,\r\n        gender: 'Male',\r\n        branch: '',\r\n        jobtitle: 'Office Clerk',\r\n        status: 'inactive',\r\n        courier_id: courierID,\r\n        encodedBY: encodedBY[1],\r\n    });  \r\n\r\n    useEffect(() => {\r\n        checked ? setOfficeEmployeeSignup({...officeEmployeeSignup, status: 'active'}) : setOfficeEmployeeSignup({...officeEmployeeSignup, status: 'inactive'});\r\n        // eslint-disable-next-line\r\n    }, [checked]);\r\n\r\n    // useEffect(() => {\r\n    //     if (!addOffice_Emp_Error){\r\n    //         setOfficeEmployeeSignup({\r\n    //             email : '',\r\n    //             fname : '',\r\n    //             mname :'',\r\n    //             lname :'',\r\n    //             address: '',\r\n    //             contactNumber: '',\r\n    //             birthdate: null,\r\n    //             gender: 'Male',\r\n    //             branch: '',\r\n    //             jobtitle: 'Office Clerk',\r\n    //             status: 'inactive',\r\n    //             courier_id: courierID,\r\n    //             encodedBY: encodedBY[1],\r\n    //         });\r\n    //         setChecked(false);\r\n    //     } // eslint-disable-next-line\r\n    // }, [addOffice_Emp_Error])\r\n\r\n    const handleOnChange = (e) =>{\r\n        setOfficeEmployeeSignup({...officeEmployeeSignup, [e.target.name]: e.target.value})\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        console.log(officeEmployeeSignup);\r\n        props.addOfficeEmployee(officeEmployeeSignup)   \r\n        \r\n        \r\n        setOfficeEmployeeSignup({\r\n            email : '',\r\n            fname : '',\r\n            mname :'',\r\n            lname :'',\r\n            address: '',\r\n            contactNumber: '',\r\n            birthdate: null,\r\n            gender: 'Male',\r\n            branch: '',\r\n            jobtitle: 'Office Clerk',\r\n            status: 'inactive',\r\n            courier_id: courierID,\r\n            encodedBY: encodedBY[1],\r\n        });\r\n        setChecked(false);\r\n    }\r\n   \r\n    const options = branches && Object.keys(branches).map(function (i) {\r\n        return {\r\n            value: branches[i].branch_name,\r\n            label: branches[i].branch_name\r\n        }\r\n      });\r\n     \r\n    return (\r\n        <div className=\"modal-wrapper\"\r\n            style={{\r\n                transform: show ? 'translateY(0vh)' : 'translateY(-150vh)',\r\n                opacity: show ? '1' : '0'\r\n            }}\r\n        >\r\n            <div className=\"modal-header\">\r\n                <h2>Add Office Employee</h2>\r\n                <span onClick={close} className=\"close-modal-btn\"> x </span>\r\n            </div>\r\n\r\n            <div className = \"modal-content\">\r\n                <form className = \"add-employee-form\" onSubmit ={handleSubmit}>\r\n                    <div className = \"employee-email-container\">\r\n                        <label>Email</label>\r\n                        <input type=\"email\"\r\n                            placeholder=\"Enter Email\" \r\n                            name=\"email\"\r\n                            value = {officeEmployeeSignup.email}\r\n                            required\r\n                            onChange = {handleOnChange} \r\n                        />\r\n                        \r\n                        <label>First Name</label>\r\n                        <input type=\"text\"\r\n                            placeholder=\"Enter First Name\" \r\n                            name=\"fname\"\r\n                            value = {officeEmployeeSignup.fname}\r\n                            required\r\n                            onChange = {handleOnChange} \r\n                        />\r\n\r\n                        <label>Middle Name</label>\r\n                        <input type=\"text\"\r\n                            placeholder=\"Enter Middle Name\" \r\n                            name=\"mname\"\r\n                            value = {officeEmployeeSignup.mname}\r\n                            required\r\n                            onChange = {handleOnChange} \r\n                        />\r\n\r\n                        <label>Last Name</label>\r\n                        <input type=\"text\"\r\n                            placeholder=\"Enter Last Name\" \r\n                            name=\"lname\"\r\n                            value = {officeEmployeeSignup.lname}\r\n                            required\r\n                            onChange = {handleOnChange} \r\n                        />\r\n\r\n                        <label>Address</label>\r\n                        <input type=\"text\"\r\n                            placeholder=\"Enter Address\" \r\n                            name=\"address\"\r\n                            value = {officeEmployeeSignup.address}\r\n                            required\r\n                            onChange = {handleOnChange} \r\n                        />\r\n\r\n                        \r\n                    </div>\r\n                    <div className = \"employee-contactNumber-container\">\r\n                        <label>Contact Number</label>\r\n                        <input type=\"text\"\r\n                            placeholder=\"Enter Contact Number\" \r\n                            name=\"contactNumber\"\r\n                            value = {officeEmployeeSignup.contactNumber}\r\n                            required\r\n                            onChange = {handleOnChange} \r\n                        />\r\n\r\n                        <label>Gender</label>  \r\n                        <select name=\"gender\" value = {officeEmployeeSignup.gender} onChange = {handleOnChange}>\r\n                            <option value=\"Male\">Male</option>\r\n                            <option value=\"Female\">Female</option>\r\n                        </select>\r\n\r\n                        <label>Job Title</label>\r\n                        <select name=\"jobtitle\" value = {officeEmployeeSignup.jobtitle} onChange = {handleOnChange}>\r\n                            <option value=\"Office Clerk\">Office Clerk</option>\r\n                            <option value=\"Manager\">Manager</option>\r\n                        </select>\r\n\r\n                        <label >Bith Date</label>\r\n                        <DatePicker\r\n                           // className = \"datepicker-birthdate\"\r\n                            selected = {officeEmployeeSignup.birthdate}\r\n                            onChange = {e =>  setOfficeEmployeeSignup({...officeEmployeeSignup, birthdate: e})}\r\n                            dateFormat = 'MM/dd/yyyy'\r\n                            placeholderText = \"Birthdate\"\r\n                            isClearable\r\n                            showYearDropdown\r\n                            scrollableYearDropdown\r\n                            maxDate = {new Date()}\r\n                        />\r\n\r\n                        <label> Company Branch</label>\r\n                        <Select \r\n                            classNamePrefix=\"mySelect\" \r\n                            options={options}\r\n                            placeholder = \"Choose company branch\" \r\n                            value =  {options && options.find(obj => obj.value === officeEmployeeSignup.branch)}\r\n                            onChange =  {e => setOfficeEmployeeSignup({...officeEmployeeSignup, branch: e.value})}\r\n                            isSearchable\r\n                            autoFocus\r\n                            maxMenuHeight = {250}\r\n                         />\r\n\r\n                        <div className = \"status-swtich-container\">\r\n                            <label className = \"employeestatus-switch\">Status:</label>\r\n                            <Switch \r\n                                className= \"react-swtich\"\r\n                                onChange = {checked => setChecked(checked)}\r\n                                checked = {checked}\r\n                                onHandleColor = \"#3981e5\"\r\n                                checkedIcon = {<div style = {activeTextSwitch}> active </div>}\r\n                                uncheckedIcon = {<div style = {inactiveTextSwitch}> inactive </div>}\r\n                                width = {90}\r\n                                height = {25}\r\n                            />\r\n\r\n                        </div>\r\n                       \r\n                    </div>\r\n                    <div className = \"modal-submit-container\">\r\n                        <button> Submit </button>\r\n                    </div>\r\n                </form>\r\n\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) =>{\r\n    console.log(state);\r\n    return{\r\n        branches: state.firestore.data.Branch,\r\n        courierID: state.courier.courierId,\r\n        addOffice_Emp_Error: state.officeEmployees.addOffice_Emp_Error, \r\n        auth: state.firebase.auth\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return{\r\n        addOfficeEmployee: (officeEmployeeSignup) => dispatch(addOfficeEmployee(officeEmployeeSignup)),\r\n    }\r\n} \r\n\r\n\r\n export default connect(mapStateToProps, mapDispatchToProps)(AddOfficeEmployee)\r\n","C:\\Users\\leo\\Desktop\\Capstone Project\\web-street-efficient\\src\\store\\reducers\\officeEmployeeReducer.js",[],"C:\\Users\\leo\\Desktop\\Capstone Project\\web-street-efficient\\src\\store\\actions\\officeEmployeeAction.js",[],"C:\\Users\\leo\\Desktop\\Capstone Project\\web-street-efficient\\src\\components\\AddDispatchRider.js",["169"],"import React, {useState, useEffect} from 'react'\r\nimport { useHistory } from 'react-router-dom';\r\nimport firebase from '../config/fbConfig'\r\nimport { activeTextSwitch, inactiveTextSwitch, customStyles } from './CustomsStyles';\r\nimport { addDispatchRiderInFirebase, SelectDesignateBarangay } from '../store/actions/dispatchRiderAction';\r\n\r\nimport DatePicker from 'react-datepicker'\r\nimport 'react-datepicker/dist/react-datepicker.css'\r\nimport Select from 'react-select'\r\nimport Switch from 'react-switch'\r\nimport { connect } from 'react-redux'\r\n\r\nconst AddDispatchRider = (props) => {\r\n    const {branches, courierID, auth, barangays, add_dispatchrider_Error} = props\r\n    const [checked, setChecked] = useState(false)//for status\r\n    let displayName = auth.displayName;\r\n    let encodedBY = displayName.split(\"@\");\r\n    const history  = useHistory();\r\n\r\n   \r\n    const [addDispatchRider, setAddDispatchRider] = useState({\r\n        fname : '',\r\n        mname :'',\r\n        lname :'',\r\n        email : '',\r\n        address: '',\r\n        contactNumber: '',\r\n        emerg_number: '',\r\n        birthdate: null,\r\n        gender: 'Male',\r\n        branch: '',\r\n        status: 'inactive',\r\n        designateBarangay: '',\r\n        courier_id: courierID,\r\n        encodedBY: encodedBY[1],\r\n        vehicle_type: 'Motorcycle',\r\n        cR : null,\r\n        oR: null,\r\n        license: null,\r\n        writtenExam: null,\r\n        actualAssessment: null\r\n    });  \r\n\r\n    useEffect(() => {\r\n        checked ? setAddDispatchRider({...addDispatchRider, status: 'active'}) : setAddDispatchRider({...addDispatchRider, status: 'inactive'});\r\n        // eslint-disable-next-line\r\n    }, [checked]);\r\n\r\n    // useEffect(() => {\r\n    //     if (!add_dispatchrider_Error){\r\n    //         setAddDispatchRider({\r\n    //             fname : '',\r\n    //             mname :'',\r\n    //             lname :'',\r\n    //             email : '',\r\n    //             address: '',\r\n    //             contactNumber: '',\r\n    //             emerg_number: '',\r\n    //             birthdate: null,\r\n    //             gender: 'Male',\r\n    //             branch: '',\r\n    //             status: 'inactive',\r\n    //             courier_id: courierID,\r\n    //             encodedBY: encodedBY[1],\r\n    //             vehicle_type: 'Motorcycle',\r\n    //             cR : null,\r\n    //             oR: null,\r\n    //             license: null,\r\n    //             writtenExam: null,\r\n    //             actualAssessment: null\r\n    //         });\r\n    //         setChecked(false);\r\n    //         imageInputRef.current.value = null;\r\n    //     } // eslint-disable-next-line\r\n    // }, [add_dispatchrider_Error])\r\n\r\n    const handleOnChange = (e) =>{\r\n        setAddDispatchRider({...addDispatchRider, [e.target.name]: e.target.value})\r\n    }\r\n\r\n    const handleCredsOnChange = async (e) =>{   \r\n        const file = e.target.files[0];\r\n        const storageRef = firebase.storage().ref();\r\n        const fileRef = storageRef.child(file.name);\r\n        await fileRef.put(file);    \r\n        setAddDispatchRider({...addDispatchRider, [e.target.name]: await fileRef.getDownloadURL()});\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        console.log(addDispatchRider);\r\n        props.addDispatchRiderInFirebase(addDispatchRider);\r\n\r\n                setAddDispatchRider({\r\n                fname : '',\r\n                mname :'',\r\n                lname :'',\r\n                email : '',\r\n                address: '',\r\n                contactNumber: '',\r\n                emerg_number: '',\r\n                birthdate: null,\r\n                gender: 'Male',\r\n                branch: '',\r\n                status: 'inactive',\r\n                designateBarangay: '',\r\n                courier_id: courierID,\r\n                encodedBY: encodedBY[1],\r\n                vehicle_type: 'Motorcycle',\r\n                cR : null,\r\n                oR: null,\r\n                license: null,\r\n                writtenExam: null,\r\n                actualAssessment: null\r\n            });\r\n            setChecked(false);\r\n\r\n            var inputElements = document.getElementsByTagName('input');\r\n\r\n            for (var i=0; i < inputElements.length; i++) {\r\n                if (inputElements[i].type === 'file') {\r\n                    inputElements[i].value = '';\r\n                }\r\n            }\r\n    }\r\n\r\n    const options = branches && Object.keys(branches).map(function (i) {\r\n        return {\r\n            value: branches[i].branch_name,\r\n            label: branches[i].branch_name,\r\n            cityID: branches[i].city_id\r\n        }\r\n      });\r\n\r\n    const onSelectChange  = (e) =>{\r\n        setAddDispatchRider({...addDispatchRider, branch: e.value});\r\n        props.SelectDesignateBarangay(e.cityID)\r\n    }\r\n    var nobarangay = true;\r\n    var optionBarangay;\r\n\r\n    if(barangays){\r\n        optionBarangay = barangays && Object.keys(barangays).map(function (i) {\r\n            return {\r\n                value: barangays[i].brgyname,\r\n                label: barangays[i].brgyname\r\n            }\r\n        });\r\n        nobarangay  = false;\r\n    }\r\n  \r\n      \r\n    return (\r\n        <div className = \"main-container\">\r\n        <div className = \"addDR-container\">\r\n           <div className = \"addDR-header\">\r\n                <h1>Dispatch Rider Registration</h1>\r\n           </div>\r\n           <div className = \"addDR-form\">\r\n               <form onSubmit = {handleSubmit}>\r\n                   <div>\r\n                       <h2>Information</h2>\r\n                   </div>\r\n                   <div className = \"addDR-inputs-info\">\r\n                        <div className = \"addDR-inputs-name\">\r\n                            <div>\r\n                                <label>First Name</label>\r\n                                <input type=\"text\"\r\n                                    placeholder=\"Enter First Name\" \r\n                                    name=\"fname\"                             \r\n                                    required   \r\n                                    value = {addDispatchRider.fname}\r\n                                    onChange = {handleOnChange}   \r\n                                />\r\n                            </div>\r\n                            <div>\r\n                                <label>Middle Name</label>\r\n                                <input type=\"text\"\r\n                                    placeholder=\"Enter Middle Name\" \r\n                                    name=\"mname\"                        \r\n                                    required  \r\n                                    value = {addDispatchRider.mname}\r\n                                    onChange = {handleOnChange}                             \r\n                                />\r\n\r\n                            </div>\r\n                            <div>\r\n                                <label>Last Name</label>\r\n                                <input type=\"text\"\r\n                                    placeholder=\"Enter Last Name\" \r\n                                    name=\"lname\"                        \r\n                                    required   \r\n                                    value = {addDispatchRider.lname}\r\n                                    onChange = {handleOnChange}                               \r\n                                />\r\n                            </div>                          \r\n                        </div>\r\n                        <div className = \"addDR-input-email\">\r\n                            <label>Email</label>\r\n                            <input type=\"email\"\r\n                                placeholder=\"Enter Email\" \r\n                                name=\"email\"\r\n                                required\r\n                                value = {addDispatchRider.email}\r\n                                onChange = {handleOnChange}   \r\n                            />\r\n                        </div>\r\n                        <div className = \"addDR-input-address\">\r\n                            <label>Address</label>\r\n                            <input type=\"text\"\r\n                                placeholder=\"Enter Address\" \r\n                                name=\"address\"\r\n                                required\r\n                                value = {addDispatchRider.address}\r\n                                onChange = {handleOnChange}   \r\n                            />\r\n                        </div>\r\n                        <div className = \"addDR-inputs-contact\">\r\n                            <div>\r\n                                <label>Contact Number</label>\r\n                                <input type=\"text\"\r\n                                    placeholder=\"Enter Contact Number\" \r\n                                    name=\"contactNumber\"                             \r\n                                    required      \r\n                                    value = {addDispatchRider.contactNumber}\r\n                                    onChange = {handleOnChange}   \r\n                                />\r\n                            </div>\r\n                            <div>\r\n                                <label>Emergency Contact Number</label>\r\n                                <input type=\"text\"\r\n                                    placeholder=\"Enter Emergency Number\" \r\n                                    name=\"emerg_number\"                        \r\n                                    required       \r\n                                    value = {addDispatchRider.emerg_number}\r\n                                    onChange = {handleOnChange}                        \r\n                                />\r\n                            </div>                          \r\n                        </div>\r\n                        <div className = \"addDR-inputs-gender\">\r\n                            <div>\r\n                                <label>Gender</label>  \r\n                                <select name=\"gender\"  value = {addDispatchRider.gender} onChange = {handleOnChange}    >\r\n                                    <option value=\"Male\">Male</option>\r\n                                    <option value=\"Female\">Female</option>\r\n                                </select>   \r\n                            </div>\r\n                            <div>\r\n                                <label className =\"label-date\" >Bith Date</label>\r\n                                <DatePicker\r\n                                    className = \"datepicker-birthdate\"     \r\n                                    selected = {addDispatchRider.birthdate}    \r\n                                    onChange = {e =>  setAddDispatchRider({...addDispatchRider, birthdate: e})}       \r\n                                    dateFormat = 'MM/dd/yyyy'\r\n                                    placeholderText = \"Birthdate\"\r\n                                    isClearable\r\n                                    showYearDropdown\r\n                                    scrollableYearDropdown   \r\n                                    maxDate = {new Date()}                            \r\n                                />\r\n                            </div>                                            \r\n                        </div>\r\n                        <div className = \"addDR-input-branch\">\r\n                            <div className = \"mySelect\">\r\n                                <label> Company Branch</label>\r\n                                <Select \r\n                                    styles={customStyles}\r\n                                    options={options}\r\n                                    classNamePrefix=\"mySelect\"                                     \r\n                                    placeholder = \"Choose company branch\"    \r\n                                    value =  {options && options.find(obj => obj.value === addDispatchRider.branch)}\r\n                                    onChange = {onSelectChange}                  \r\n                                    isSearchable\r\n                                    autoFocus\r\n                                    maxMenuHeight = {250}\r\n                                />\r\n                            </div>\r\n                            <div className = \"addDR-switch\">\r\n                                <label>Status:</label>\r\n                                <Switch \r\n                                    className= \"react-swtich\"\r\n                                    onHandleColor = \"#3981e5\"  \r\n                                    onChange = {checked => setChecked(checked)}\r\n                                    checked = {checked}             \r\n                                    checkedIcon = {<div style = {activeTextSwitch}> active </div>}\r\n                                    uncheckedIcon = {<div style = {inactiveTextSwitch}> inactive </div>}          \r\n                                    width = {90}\r\n                                    height = {25}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                        <div>\r\n                            <div className = \"mySelect\">\r\n                                <label> Designate Barangay</label>\r\n                                <Select \r\n                                    styles={customStyles}\r\n                                    options={optionBarangay}\r\n                                    classNamePrefix=\"mySelect\"                                     \r\n                                    placeholder = \"Designate Barangay\"    \r\n                                    value =  {optionBarangay && optionBarangay.find(obj => obj.value === addDispatchRider.designateBarangay)}\r\n                                    onChange = {e => setAddDispatchRider({...addDispatchRider, designateBarangay: e.value})}                   \r\n                                    isSearchable\r\n                                    autoFocus\r\n                                    maxMenuHeight = {250}\r\n                                />\r\n                                 <div className = \"Errormessage\">\r\n                                    { nobarangay ? <span> Select Warehouse Branch First! </span> : <span> </span> }\r\n                                </div>  \r\n                            </div>\r\n                        </div>\r\n                   </div>\r\n                   <hr />\r\n                    <div>\r\n                        <h2>Credential</h2>\r\n                    </div>\r\n                    <div className = \"addDR-inputs-creds\">\r\n                        \r\n                            <div>\r\n                                <label> Vehicle Type: </label>  \r\n                                <select name=\"vehicle_type\" value = {addDispatchRider.vehicle_type} onChange ={handleOnChange}>\r\n                                    <option value=\"Motorcycle\">Motorcycle</option>\r\n                                    <option value=\"Truck\">Truck</option>\r\n                                </select>  \r\n                            </div>\r\n                             <div>\r\n                                <label> Actual Assessment: </label>  \r\n                                <input type=\"file\" \r\n                                    name=\"actualAssessment\"                        \r\n                                    required    \r\n                                    onChange ={handleCredsOnChange}   \r\n                                                      \r\n                                />\r\n                             </div>\r\n                      \r\n                       \r\n                            <div>\r\n                                <label> Written Exam Result: </label>  \r\n                                <input type=\"file\" \r\n                                    name=\"writtenExam\"                        \r\n                                    required       \r\n                                    onChange = {handleCredsOnChange}   \r\n                                                     \r\n                                /> \r\n                            </div>\r\n                             <div>\r\n                                <label> License: </label>  \r\n                                    <input type=\"file\" \r\n                                    name=\"license\"                        \r\n                                    required   \r\n                                    onChange = {handleCredsOnChange}   \r\n                                                              \r\n                                />\r\n                             </div>\r\n                        \r\n                            <div>\r\n                                <label> Official Receipt: </label>  \r\n                                <input type=\"file\" \r\n                                    name=\"oR\"                        \r\n                                    required \r\n                                    onChange = {handleCredsOnChange}                                                                   \r\n                                /> \r\n                            </div>\r\n                             <div>\r\n                                <label> Certificate of Registration: </label>  \r\n                                <input type=\"file\" \r\n                                    name=\"cR\"                        \r\n                                    required   \r\n                                    onChange = {handleCredsOnChange}                                                             \r\n                                />\r\n                             </div>\r\n                        \r\n                    </div>\r\n                    <hr />\r\n                    <div className = \"btn-submit\">\r\n                        <button className = \"btn-primary\">Submit</button>\r\n                    </div>\r\n               </form>\r\n           </div>\r\n           <div className = \"addDR-back\">\r\n                <button className = \"btn-primary\" onClick = {() => {history.push('/dispatchRiders')}}>Back</button>\r\n           </div>\r\n        </div>\r\n        </div>\r\n    )\r\n}\r\nconst mapStateToProps = (state) =>{\r\n    console.log(state);\r\n    return{\r\n        branches: state.firestore.data.Branch,\r\n        courierID: state.courier.courierId,\r\n        auth: state.firebase.auth,\r\n        add_dispatchrider_Error: state.dispatchRider.add_DispatchRider_Error,\r\n        barangays: state.dispatchRider.barangays\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return{\r\n        addDispatchRiderInFirebase: (addDispatchRider) => dispatch(addDispatchRiderInFirebase(addDispatchRider)),\r\n        SelectDesignateBarangay: (cityID) => dispatch(SelectDesignateBarangay(cityID)),\r\n    }\r\n} \r\n\r\n\r\n export default connect(mapStateToProps, mapDispatchToProps)(AddDispatchRider)\r\n\r\n\r\n\r\n","C:\\Users\\leo\\Desktop\\Capstone Project\\web-street-efficient\\src\\store\\reducers\\dispatchRiderReducer.js",[],"C:\\Users\\leo\\Desktop\\Capstone Project\\web-street-efficient\\src\\components\\CustomsStyles.js",[],"C:\\Users\\leo\\Desktop\\Capstone Project\\web-street-efficient\\src\\store\\actions\\dispatchRiderAction.js",[],"C:\\Users\\leo\\Desktop\\Capstone Project\\web-street-efficient\\src\\components\\AddItem.js",[],"C:\\Users\\leo\\Desktop\\Capstone Project\\web-street-efficient\\src\\store\\reducers\\itemReducer.js",[],"C:\\Users\\leo\\Desktop\\Capstone Project\\web-street-efficient\\src\\store\\actions\\itemAction.js",[],"C:\\Users\\leo\\Desktop\\Capstone Project\\web-street-efficient\\src\\components\\AddItemToPrint.js",[],"C:\\Users\\leo\\Desktop\\Capstone Project\\web-street-efficient\\src\\components\\ItemPrint.js",[],"C:\\Users\\leo\\Desktop\\Capstone Project\\web-street-efficient\\src\\components\\AssignRiderInItem.js",["170"],"C:\\Users\\leo\\Desktop\\Capstone Project\\web-street-efficient\\src\\components\\TableColumns.js",[],"C:\\Users\\leo\\Desktop\\Capstone Project\\web-street-efficient\\src\\components\\SelectAssignRider.js",["171","172"],"import React, { useMemo, useState, useEffect } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\nimport fire from '../config/fbConfig';\r\n\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\nimport paginationFactory  from 'react-bootstrap-table2-paginator';\r\nimport { DispatchRidersAssign } from './TableColumns';\r\nimport { addItemDel } from '../store/actions/itemAction';\r\n\r\nimport DatePicker from 'react-datepicker'\r\nimport 'react-datepicker/dist/react-datepicker.css'\r\nimport { toast } from 'react-toastify'\r\nimport 'react-toastify/dist/ReactToastify.css'\r\n\r\ntoast.configure();\r\n\r\nconst SelectAssignRider = (props) => {\r\n    const history = useHistory();\r\n    const {item, auth, dispatchRiders, barangays} = props;   \r\n    const [showRiderList, setShowRiderList] =useState(false);\r\n    let displayName = auth.displayName;\r\n    let assignedBY = displayName.split(\"@\");\r\n    const [dRName, setDRName] = useState(\"\");\r\n\r\n    const [itemDel, setItemDel] = useState({\r\n        item_id: item.item_id,\r\n        rider_id: null,\r\n        assignedby: assignedBY[1],\r\n        date_assigned: new Date(),\r\n        del_date_sched: null,\r\n        item_weight: item.itemweight,\r\n        itemRecipientContactNumber: item.itemRecipientContactNumber,\r\n    });\r\n\r\n    const columns = useMemo(() => DispatchRidersAssign, []);\r\n    const rowEvents = {\r\n        onClick: (e, row) => {\r\n            //console.log(row.id);   \r\n            setItemDel({...itemDel, rider_id: row.id})\r\n            setDRName(row.fname + \" \" + row.mname + \" \" + row.lname)\r\n        }\r\n    }\r\n\r\n    const selectRow = {\r\n        mode: \"radio\",\r\n        clickToSelect: true,\r\n        bgColor: \"#00BFFF\",\r\n      };\r\n\r\n    const onClickshowRider = (e) =>{\r\n        e.preventDefault();\r\n        itemDel.del_date_sched ? setShowRiderList(true): setShowRiderList(false) \r\n        setDRName('')\r\n        setItemDel({...itemDel, rider_id: ''})\r\n    }\r\n\r\n    const [selectedbrgy, setSelectedBrgy] = useState(item.itemRecipientAddressBarangay);\r\n    const [newBrgy, setNewBrgy] = useState([]);\r\n    const [bry, setbry] = useState([]);\r\n\r\n    function firstFilterBrgy () {\r\n        let riderslist = [] \r\n        dispatchRiders && dispatchRiders.map((rider, index) =>{           \r\n            let counter = 0;\r\n            let weightSum = 0;\r\n            fire.firestore().collection(\"Delivery_Header\")\r\n            .where(\"rider_id\", \"==\", rider.id)\r\n            .where(\"del_date_sched\", \"==\", itemDel.del_date_sched)\r\n            .get()\r\n            .then((querySnapshot) => {\r\n                querySnapshot.forEach((doc) => {\r\n                    weightSum = weightSum + parseInt(doc.data().item_weight);\r\n                    counter ++;\r\n                });\r\n                var riders = {\r\n                    id: rider.id,\r\n                    fname: rider.fname,\r\n                    mname: rider.mname,\r\n                    lname: rider.lname,\r\n                    designateBarangay: rider.designateBarangay,\r\n                    vehicle_type: rider.vehicle_type,\r\n                    contactNumber: rider.contactNumber,\r\n                    itemdaytotal: counter.toString(),\r\n                    itemtotalweight: weightSum.toString()\r\n                };\r\n                riderslist.push(riders)\r\n            })     \r\n        });\r\n        setbry(riderslist);\r\n        console.log(bry)       \r\n        let newArray = bry.filter((rider) => {\r\n            let searchValue = rider.designateBarangay;\r\n            return searchValue.indexOf(item.itemRecipientAddressBarangay) !==-1;\r\n        });\r\n        setNewBrgy(newArray);   \r\n       \r\n    }\r\n\r\n    useEffect(() => {\r\n        firstFilterBrgy();\r\n    },[itemDel.del_date_sched])\r\n\r\n\r\n   // console.log(dispatchRiders)\r\n\r\n    const onSelectChange = (e) => {\r\n        setSelectedBrgy(e.target.value);\r\n        let newArray = bry.filter((rider) => {\r\n            let searchValue = rider.designateBarangay;\r\n            return searchValue.indexOf(e.target.value) !==-1;\r\n        });\r\n        setNewBrgy(newArray);\r\n    }\r\n\r\n    const onHandleSubmit = (e) =>{\r\n        e.preventDefault();\r\n        if(itemDel.rider_id && itemDel.del_date_sched){\r\n           props.addItemDel(itemDel)\r\n           history.push('/assignRiderInItem')\r\n        }else {\r\n            toast.error('Pls.. Select Delivery Date Schedule / Dispatch Rider')\r\n        }\r\n    }\r\n\r\n    //console.log(item.item_id)\r\n    return (\r\n        <div className = \"container main-cntr\" >\r\n            <div className = \"row justify-content-md-center\">\r\n                <h1>Assign Dispatch Rider</h1>   \r\n            </div>  \r\n            <div className = \"row justify-content-md-center sar-tn\">\r\n                <div className = \"row\"><h6>Item ID</h6> </div>  \r\n                <div className=\"w-100\"></div>\r\n                <div className = \"row\" ><h1>{item.item_id}</h1> </div>  \r\n            </div>\r\n            <div className = \"row justify-content-md-center\">\r\n                <div className=\"card crd-sender\">\r\n                    <h5 className=\"card-title\">Sender</h5>\r\n                    <p className=\"card-text\"> Name: {item.itemSendername}</p>\r\n                    <p className=\"card-text\"> Contact Number: {item.itemSenderContactNumber}</p>\r\n                    <p className=\"card-text\"> Address: {item.itemSenderAddressStreet}</p>\r\n                    <p className=\"card-text\"> Barangay: {item.itemSenderAddressBarangay}</p>\r\n                    <p className=\"card-text\"> City: {item.itemSenderAddressCity}</p>\r\n                    <p className=\"card-text\"> Province: {item.itemSenderAddressProvince}</p>\r\n                </div>\r\n                <div className=\"card crd-recipient\">\r\n                    <h5 className=\"card-title\">Recipient</h5>\r\n                    <p className=\"card-text\"> Name: {item.itemRecipientname}</p>\r\n                    <p className=\"card-text\"> Contact Number: {item.itemRecipientContactNumber}</p>\r\n                    <p className=\"card-text\"> Address: {item.itemRecipientAddressStreet}</p>\r\n                    <p className=\"card-text\"> Barangay: {item.itemRecipientAddressBarangay}</p>\r\n                    <p className=\"card-text\"> City: {item.itemRecipientAddressCity}</p>\r\n                    <p className=\"card-text\"> Province: {item.itemRecipientAddressProvince}</p>\r\n                </div>\r\n            </div>\r\n            <div className=\"row justify-content-md-center\">\r\n                <div className=\"row justify-content-md-center item-desc\">\r\n                    <div className=\"col-sm\">\r\n                        Item Weight: {item.itemweight}\r\n                    </div>\r\n                    <div className=\"col-sm\">\r\n                        Item Quantity: {item.itemqty}\r\n                    </div>\r\n                    <div className=\"col-sm\">\r\n                        COD: {item.itemCOD}\r\n                    </div>\r\n                </div>      \r\n            </div>\r\n            <hr/>\r\n            <div className=\"row justify-content-md-center\">\r\n                <h5>Delivery Date Schedule</h5>\r\n                <div className=\"w-100\"></div>\r\n                <div className=\"d-flex justify-content-center\">\r\n                    <DatePicker\r\n                        className = \"datepicker-aritem\"\r\n                        selected = {itemDel.del_date_sched}\r\n                        onChange = {e =>  setItemDel({...itemDel, del_date_sched: e})}\r\n                        dateFormat = 'MM/dd/yyyy'\r\n                        placeholderText = \"Choose Delivery Date Schedule\"\r\n                        isClearable\r\n                        minDate = {new Date()}\r\n                    />  \r\n                </div>\r\n            </div>\r\n            <div className=\"row justify-content-md-center\">\r\n                <div><button type=\"button\" className=\"btn btn-primary\" onClick = {onClickshowRider}>Show Rider List</button></div>\r\n                <div className=\"w-100\"></div>\r\n                <div className= \"riderlist\">\r\n                    { showRiderList ?\r\n                    <div className = \"riderTable\">\r\n                        <div className = \"d-flex justify-content-center\">\r\n                            <h6 className = \"brgyselectqoute\">Select Brgy: </h6>\r\n                            <select className = \"brgySelect\" name= \"barangay\" value = {selectedbrgy} onChange = {onSelectChange}>\r\n                                {barangays.map(barangay =>\r\n                                <option key={barangay.brgyname} value={barangay.brgyname}> {barangay.brgyname} </option>\r\n                                )};\r\n                            </select>\r\n                         </div>\r\n                            <BootstrapTable\r\n                                striped\r\n                                keyField = \"id\"\r\n                                data = {newBrgy}\r\n                                columns = {columns}\r\n                                pagination = {paginationFactory()}\r\n                                rowEvents = {rowEvents}\r\n                                selectRow = {selectRow}\r\n                                sort={ { dataField: 'date_encoded', order: 'asc' } }\r\n                            />\r\n                        \r\n                            <h5 className = \"riderlist\">Dispatch Rider: {dRName}</h5>\r\n                    </div>\r\n                    : \r\n                    <p>Choose Delivery Date Schedule First</p>}\r\n                </div>          \r\n            </div>\r\n            <hr/>\r\n            <div className=\"row justify-content-md-center btn-cntr\">\r\n                <div className = \"col col-sm-4\">\r\n                    <button className = \"btn-primary\" onClick = {() => {history.push('/assignRiderInItem')}}>&lt;&lt;Back</button>\r\n                </div>\r\n                <div className = \"col col-sm-2\">\r\n                    <button className = \"drsubmit\" onClick = {onHandleSubmit}>Submit</button>\r\n                </div>\r\n                \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nconst mapStateToProps = (state) =>{\r\n    //console.log(state)\r\n    return{\r\n       item: state.items.selectedUnAssignedItems,\r\n       auth: state.firebase.auth,\r\n       dispatchRiders: state.firestore.ordered[\"Dispatch Riders\"],\r\n       barangays: state.items.getbarangays\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) =>{\r\n    return {\r\n        addItemDel: (itemDel) => dispatch(addItemDel(itemDel)),\r\n    }\r\n}\r\n export default connect(mapStateToProps, mapDispatchToProps) (SelectAssignRider)\r\n\r\n","C:\\Users\\leo\\Desktop\\Capstone Project\\web-street-efficient\\src\\components\\EntryItems.js",["173","174"],"import React, {useState, useMemo, useEffect} from 'react'\r\n\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\nimport paginationFactory  from 'react-bootstrap-table2-paginator';\r\nimport { Modal, Button } from 'react-bootstrap';\r\nimport { connect } from 'react-redux';\r\nimport fire from '../config/fbConfig' \r\nimport moment from 'moment';\r\nimport { AssignRiderColumns } from './TableColumns';\r\n\r\nconst EntryItems = (props) => {\r\n    const {courierID, courBranch} = props;\r\n    const [item , setItem] = useState([]);\r\n    const [loading , setLoading] = useState(false);\r\n    const [category, setCategory] = useState('');\r\n    const [filterItems, setFilterItems] = useState([]);\r\n    const [searchInput, setSearchInput] = useState('');\r\n    const [modalInfo, setModalInfo] = useState([]);\r\n    const [showModal, setShowModal] = useState(false);\r\n\r\n    const [show, setShow] = useState(false);\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n\r\n    const ref = fire.firestore().collection(\"Items\").where(\"courier_id\", \"==\", courierID)\r\n        .where(\"itemSenderBranch\", \"==\", courBranch)\r\n\r\n    function getItem(){\r\n        setLoading(true);\r\n        ref.onSnapshot((querySnapshot) => {     \r\n            var itemsdata= [];\r\n                querySnapshot.forEach((doc) => {  \r\n                    var itemObj = {\r\n                        item_id: doc.data().item_id,\r\n                        itemSendername: doc.data().itemSendername,\r\n                        itemSenderContactNumber: doc.data().itemSenderContactNumber,\r\n                        itemSenderAddressStreet: doc.data().itemSenderAddressStreet,\r\n                        itemSenderAddressBarangay: doc.data().itemSenderAddressBarangay,\r\n                        itemSenderAddressCity: doc.data().itemSenderAddressCity,\r\n                        itemSenderAddressProvince: doc.data().itemSenderAddressProvince,\r\n                        itemRecipientname: doc.data().itemRecipientname,\r\n                        itemRecipientContactNumber: doc.data().itemRecipientContactNumber,\r\n                        itemRecipientAddressStreet: doc.data().itemRecipientAddressStreet,\r\n                        itemRecipientAddressBarangay: doc.data().itemRecipientAddressBarangay,\r\n                        itemRecipientAddressCity: doc.data().itemRecipientAddressCity,\r\n                        itemRecipientAddressProvince: doc.data().itemRecipientAddressProvince, \r\n                        itemRecipientBranch: doc.data().itemRecipientBranch,\r\n                        itemSenderBranch: doc.data().itemSenderBranch,\r\n                        itemqty: doc.data().itemqty,\r\n                        itemweight: doc.data().itemweight,\r\n                        itemCOD: doc.data().itemCOD,\r\n                        courier_id: doc.data().courier_id, \r\n                        status: doc.data().status,\r\n                        encodedBy: doc.data().encodedBy,\r\n                        date_encoded: moment(doc.data().date_encoded.toDate()).format('LL').toString(),\r\n                    }                \r\n                    itemsdata.push(itemObj)\r\n                });\r\n                setItem(itemsdata);\r\n                setLoading(false);\r\n        });    \r\n    }\r\n    \r\n    useEffect(() => {\r\n        getItem();\r\n    }, [])\r\n        \r\n    const columns = useMemo(() => AssignRiderColumns, []);\r\n    const rowEvents = {\r\n        onDoubleClick: (e, row) => {\r\n           console.log(row);    \r\n           setModalInfo(row);\r\n           toggleTrueFalse();\r\n        }\r\n    }\r\n    const selectRow = {\r\n        mode: \"radio\",\r\n        clickToSelect: true,\r\n        bgColor: \"#00BFFF\",\r\n      };\r\n\r\n    const toggleTrueFalse = () => {\r\n        setShowModal(handleShow);\r\n    };\r\n\r\n    const ModalContent = () =>{\r\n        return (\r\n            <Modal show = {show} onHide ={handleClose}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>\r\n                        {modalInfo.item_id}\r\n                    </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <h5>Sender Information</h5>\r\n                    <ul>\r\n                        <ol>Name: {modalInfo.itemSendername}</ol>\r\n                        <ol>Contact Number: {modalInfo.itemSenderContactNumber}</ol>\r\n                        <ol>Address: {modalInfo.itemSenderAddressStreet},\r\n                             {modalInfo.itemSenderAddressBarangay}, \r\n                             {modalInfo.itemSenderAddressCity}, {modalInfo.itemSenderAddressProvince}\r\n                         </ol>\r\n                    </ul>\r\n                    <h5>Recipient Information</h5>\r\n                    <ul>\r\n                        <ol>Name: {modalInfo.itemRecipientname}</ol>\r\n                        <ol>Contact Number: {modalInfo.itemRecipientContactNumber}</ol>\r\n                        <ol>Address: {modalInfo.itemRecipientAddressStreet},\r\n                             {modalInfo.itemRecipientAddressBarangay}, \r\n                             {modalInfo.itemRecipientAddressCity}, {modalInfo.itemRecipientAddressProvince}\r\n                         </ol>\r\n                    </ul>\r\n                    <h5>Item Desc.</h5>\r\n                    <ul>\r\n                        <ol>QTY: {modalInfo.itemqty}</ol>\r\n                        <ol>Weight: {modalInfo.itemweight} KGS.</ol>\r\n                        <ol>COD: PHP {modalInfo.itemCOD}</ol>\r\n                        <ol>Encoded By: {modalInfo.encodedBy}</ol>\r\n                        <ol>Encoded Date: {modalInfo.date_encoded}</ol>\r\n                        <ol>Status: {modalInfo.status}</ol>\r\n                    </ul>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant = \"secondary\" onClick = {handleClose}>\r\n                        Close\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n       )\r\n    }\r\n    const onhandleChange = (e) => {\r\n        setSearchInput(e.target.value)\r\n        let newArray = item.filter((sinlgeItem) => {\r\n            if(category === \"Item ID\"){\r\n                let searchValue = sinlgeItem.item_id.toLowerCase();\r\n                return searchValue.indexOf(e.target.value) !==-1;\r\n            } else if(category === \"Recipient Name\"){\r\n                let searchValue = sinlgeItem.itemRecipientname.toLowerCase();\r\n                return searchValue.indexOf(e.target.value) !==-1;\r\n            }     \r\n            else if(category === \"Sender Name\"){\r\n                let searchValue = sinlgeItem.itemSendername.toLowerCase();\r\n                return searchValue.indexOf(e.target.value) !==-1;\r\n            }\r\n            else if(category === \"ByDaTe\"){\r\n                let searchValue = sinlgeItem.date_encoded.toLowerCase();\r\n                return searchValue.indexOf(e.target.value) !==-1;\r\n            }\r\n            return sinlgeItem;   \r\n        });\r\n        setFilterItems(newArray);\r\n    }\r\n\r\n    if(loading){\r\n        return <p>loading.....</p>\r\n    }\r\n\r\n    return (\r\n        <div className = \"container-fluid\">\r\n            <div className = \"row justify-content-md-center\">\r\n                <h2>Entry Items</h2>   \r\n            </div>  \r\n            <div className = \"ARtable\">\r\n                <div className = \"d-flex justify-content-center searchEntryItems\">\r\n                    <input value = {searchInput} onChange = {onhandleChange} type = \"text\" placeholder =\"Seacrh for....\" className= \"searchOfAssignRiderItem\"></input>\r\n                    \r\n                    <select value = {category}  onChange = {(e) => setCategory(e.target.value)}> \r\n                        <option value=\"\" disabled selected hidden>Choose Category...</option>\r\n                        <option value = \"Item ID\">Item ID</option>\r\n                        <option value = \"Recipient Name\">Recipient Name</option>\r\n                        <option value = \"Sender Name\">Sender Name</option>\r\n                        <option value = \"ByDaTe\">Date</option>\r\n                    </select>\r\n                </div>  \r\n                <BootstrapTable\r\n                    striped \r\n                    keyField = \"item_id\"\r\n                    data = {!searchInput? item : filterItems}\r\n                    columns = {columns}\r\n                    pagination = {paginationFactory()}\r\n                    rowEvents = {rowEvents}\r\n                    selectRow = {selectRow}\r\n                />\r\n                {show ? <ModalContent/> : null}\r\n            </div> \r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return{\r\n        courierID: state.courier.courierId,\r\n        courBranch: state.courier.courBranch,\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps) (EntryItems)\r\n","C:\\Users\\leo\\Desktop\\Capstone Project\\web-street-efficient\\src\\components\\AllItems.js",[],"C:\\Users\\leo\\Desktop\\Capstone Project\\web-street-efficient\\src\\components\\DeliveredItems.js",[],"C:\\Users\\leo\\Desktop\\Capstone Project\\web-street-efficient\\src\\components\\ReturnedItems.js",[],"C:\\Users\\leo\\Desktop\\Capstone Project\\web-street-efficient\\src\\components\\OfficeEmpInfo.js",[],{"ruleId":"175","replacedBy":"176"},{"ruleId":"177","replacedBy":"178"},{"ruleId":"179","severity":1,"message":"180","line":63,"column":8,"nodeType":"181","endLine":63,"endColumn":10,"suggestions":"182"},{"ruleId":"179","severity":1,"message":"183","line":55,"column":8,"nodeType":"181","endLine":55,"endColumn":10,"suggestions":"184"},{"ruleId":"185","severity":1,"message":"186","line":15,"column":46,"nodeType":"187","messageId":"188","endLine":15,"endColumn":65},{"ruleId":"185","severity":1,"message":"189","line":14,"column":50,"nodeType":"187","messageId":"188","endLine":14,"endColumn":73},{"ruleId":"179","severity":1,"message":"190","line":66,"column":8,"nodeType":"181","endLine":66,"endColumn":10,"suggestions":"191"},{"ruleId":"192","severity":1,"message":"193","line":64,"column":61,"nodeType":"194","messageId":"195","endLine":64,"endColumn":63},{"ruleId":"179","severity":1,"message":"196","line":102,"column":7,"nodeType":"181","endLine":102,"endColumn":31,"suggestions":"197"},{"ruleId":"185","severity":1,"message":"198","line":19,"column":12,"nodeType":"187","messageId":"188","endLine":19,"endColumn":21},{"ruleId":"179","severity":1,"message":"190","line":66,"column":8,"nodeType":"181","endLine":66,"endColumn":10,"suggestions":"199"},"no-native-reassign",["200"],"no-negated-in-lhs",["201"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getRiderLocation'. Either include it or remove the dependency array.","ArrayExpression",["202"],"React Hook useEffect has a missing dependency: 'getOfficeEmp'. Either include it or remove the dependency array.",["203"],"no-unused-vars","'addOffice_Emp_Error' is assigned a value but never used.","Identifier","unusedVar","'add_dispatchrider_Error' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getItem'. Either include it or remove the dependency array.",["204"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","React Hook useEffect has a missing dependency: 'firstFilterBrgy'. Either include it or remove the dependency array.",["205"],"'showModal' is assigned a value but never used.",["206"],"no-global-assign","no-unsafe-negation",{"desc":"207","fix":"208"},{"desc":"209","fix":"210"},{"desc":"211","fix":"212"},{"desc":"213","fix":"214"},{"desc":"211","fix":"215"},"Update the dependencies array to be: [getRiderLocation]",{"range":"216","text":"217"},"Update the dependencies array to be: [getOfficeEmp]",{"range":"218","text":"219"},"Update the dependencies array to be: [getItem]",{"range":"220","text":"221"},"Update the dependencies array to be: [firstFilterBrgy, itemDel.del_date_sched]",{"range":"222","text":"223"},{"range":"224","text":"221"},[2777,2779],"[getRiderLocation]",[2122,2124],"[getOfficeEmp]",[3342,3344],"[getItem]",[3709,3733],"[firstFilterBrgy, itemDel.del_date_sched]",[3310,3312]]