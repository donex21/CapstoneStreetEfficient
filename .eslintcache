[{"C:\\Users\\leo\\Desktop\\Capstone Project\\web-street-efficient\\src\\index.js":"1","C:\\Users\\leo\\Desktop\\Capstone Project\\web-street-efficient\\src\\App.js":"2","C:\\Users\\leo\\Desktop\\Capstone Project\\web-street-efficient\\src\\reportWebVitals.js":"3","C:\\Users\\leo\\Desktop\\Capstone Project\\web-street-efficient\\src\\components\\courierLogin.js":"4","C:\\Users\\leo\\Desktop\\Capstone Project\\web-street-efficient\\src\\components\\courierlogin.js":"5","C:\\Users\\leo\\Desktop\\Capstone Project\\web-street-efficient\\src\\components\\Courierlogin.js":"6","C:\\Users\\leo\\Desktop\\Capstone Project\\web-street-efficient\\src\\components\\UserLogin.js":"7","C:\\Users\\leo\\Desktop\\Capstone Project\\web-street-efficient\\src\\components\\InputNewPwd.js":"8","C:\\Users\\leo\\Desktop\\Capstone Project\\web-street-efficient\\src\\store\\reducers\\rootReducer.js":"9","C:\\Users\\leo\\Desktop\\Capstone Project\\web-street-efficient\\src\\config\\fbConfig.js":"10","C:\\Users\\leo\\Desktop\\Capstone Project\\web-street-efficient\\src\\store\\reducers\\courierReducer.js":"11","C:\\Users\\leo\\Desktop\\Capstone Project\\web-street-efficient\\src\\store\\actions\\courierAction.js":"12","C:\\Users\\leo\\Desktop\\Capstone Project\\web-street-efficient\\src\\components\\Home.js":"13","C:\\Users\\leo\\Desktop\\Capstone Project\\web-street-efficient\\src\\components\\Items.js":"14","C:\\Users\\leo\\Desktop\\Capstone Project\\web-street-efficient\\src\\components\\NavigationHeader.js":"15","C:\\Users\\leo\\Desktop\\Capstone Project\\web-street-efficient\\src\\components\\RidersMap.js":"16","C:\\Users\\leo\\Desktop\\Capstone Project\\web-street-efficient\\src\\components\\OfficeEmployees.js":"17","C:\\Users\\leo\\Desktop\\Capstone Project\\web-street-efficient\\src\\components\\DispatchRiders.js":"18","C:\\Users\\leo\\Desktop\\Capstone Project\\web-street-efficient\\src\\components\\UserProfile.js":"19","C:\\Users\\leo\\Desktop\\Capstone Project\\web-street-efficient\\src\\components\\AddOfficeEmployee.js":"20","C:\\Users\\leo\\Desktop\\Capstone Project\\web-street-efficient\\src\\store\\reducers\\officeEmployeeReducer.js":"21","C:\\Users\\leo\\Desktop\\Capstone Project\\web-street-efficient\\src\\store\\actions\\officeEmployeeAction.js":"22","C:\\Users\\leo\\Desktop\\Capstone Project\\web-street-efficient\\src\\components\\AddDispatchRider.js":"23","C:\\Users\\leo\\Desktop\\Capstone Project\\web-street-efficient\\src\\store\\reducers\\dispatchRiderReducer.js":"24","C:\\Users\\leo\\Desktop\\Capstone Project\\web-street-efficient\\src\\components\\CustomsStyles.js":"25","C:\\Users\\leo\\Desktop\\Capstone Project\\web-street-efficient\\src\\store\\actions\\dispatchRiderAction.js":"26","C:\\Users\\leo\\Desktop\\Capstone Project\\web-street-efficient\\src\\components\\AddItem.js":"27","C:\\Users\\leo\\Desktop\\Capstone Project\\web-street-efficient\\src\\store\\reducers\\itemReducer.js":"28","C:\\Users\\leo\\Desktop\\Capstone Project\\web-street-efficient\\src\\store\\actions\\itemAction.js":"29","C:\\Users\\leo\\Desktop\\Capstone Project\\web-street-efficient\\src\\components\\AddItemToPrint.js":"30","C:\\Users\\leo\\Desktop\\Capstone Project\\web-street-efficient\\src\\components\\ItemPrint.js":"31"},{"size":1344,"mtime":1612558897488,"results":"32","hashOfConfig":"33"},{"size":2312,"mtime":1614103767092,"results":"34","hashOfConfig":"33"},{"size":362,"mtime":499162500000,"results":"35","hashOfConfig":"33"},{"size":694,"mtime":1612395941090,"results":"36","hashOfConfig":"33"},{"size":694,"mtime":1612395941090,"results":"37","hashOfConfig":"33"},{"size":2027,"mtime":1613062895276,"results":"38","hashOfConfig":"33"},{"size":2636,"mtime":1613176296662,"results":"39","hashOfConfig":"33"},{"size":1597,"mtime":1613180094105,"results":"40","hashOfConfig":"33"},{"size":658,"mtime":1613956956265,"results":"41","hashOfConfig":"33"},{"size":644,"mtime":1613875849733,"results":"42","hashOfConfig":"33"},{"size":2172,"mtime":1613012904352,"results":"43","hashOfConfig":"33"},{"size":5130,"mtime":1613178583490,"results":"44","hashOfConfig":"33"},{"size":1499,"mtime":1613889408302,"results":"45","hashOfConfig":"33"},{"size":336,"mtime":1613687909162,"results":"46","hashOfConfig":"33"},{"size":3394,"mtime":1614054005558,"results":"47","hashOfConfig":"33"},{"size":155,"mtime":1612750197301,"results":"48","hashOfConfig":"33"},{"size":671,"mtime":1612996984422,"results":"49","hashOfConfig":"33"},{"size":399,"mtime":1613278535971,"results":"50","hashOfConfig":"33"},{"size":164,"mtime":1612753044876,"results":"51","hashOfConfig":"33"},{"size":9881,"mtime":1614049034659,"results":"52","hashOfConfig":"33"},{"size":898,"mtime":1613450916395,"results":"53","hashOfConfig":"33"},{"size":1429,"mtime":1613539558822,"results":"54","hashOfConfig":"33"},{"size":18716,"mtime":1613876767652,"results":"55","hashOfConfig":"33"},{"size":1095,"mtime":1613758703828,"results":"56","hashOfConfig":"33"},{"size":1919,"mtime":1613888816118,"results":"57","hashOfConfig":"33"},{"size":2099,"mtime":1613758706902,"results":"58","hashOfConfig":"33"},{"size":14386,"mtime":1614111262333,"results":"59","hashOfConfig":"33"},{"size":804,"mtime":1614112076225,"results":"60","hashOfConfig":"33"},{"size":582,"mtime":1614112110526,"results":"61","hashOfConfig":"33"},{"size":3483,"mtime":1614109770684,"results":"62","hashOfConfig":"33"},{"size":1863,"mtime":1614116737624,"results":"63","hashOfConfig":"33"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},"1wwc3yu",{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"66"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"66"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"125","messages":"126","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\leo\\Desktop\\Capstone Project\\web-street-efficient\\src\\index.js",[],["129","130"],"C:\\Users\\leo\\Desktop\\Capstone Project\\web-street-efficient\\src\\App.js",[],"C:\\Users\\leo\\Desktop\\Capstone Project\\web-street-efficient\\src\\reportWebVitals.js",[],"C:\\Users\\leo\\Desktop\\Capstone Project\\web-street-efficient\\src\\components\\courierLogin.js",[],"C:\\Users\\leo\\Desktop\\Capstone Project\\web-street-efficient\\src\\components\\courierlogin.js",[],"C:\\Users\\leo\\Desktop\\Capstone Project\\web-street-efficient\\src\\components\\Courierlogin.js",[],"C:\\Users\\leo\\Desktop\\Capstone Project\\web-street-efficient\\src\\components\\UserLogin.js",[],"C:\\Users\\leo\\Desktop\\Capstone Project\\web-street-efficient\\src\\components\\InputNewPwd.js",[],"C:\\Users\\leo\\Desktop\\Capstone Project\\web-street-efficient\\src\\store\\reducers\\rootReducer.js",[],"C:\\Users\\leo\\Desktop\\Capstone Project\\web-street-efficient\\src\\config\\fbConfig.js",[],"C:\\Users\\leo\\Desktop\\Capstone Project\\web-street-efficient\\src\\store\\reducers\\courierReducer.js",[],"C:\\Users\\leo\\Desktop\\Capstone Project\\web-street-efficient\\src\\store\\actions\\courierAction.js",[],"C:\\Users\\leo\\Desktop\\Capstone Project\\web-street-efficient\\src\\components\\Home.js",[],"C:\\Users\\leo\\Desktop\\Capstone Project\\web-street-efficient\\src\\components\\Items.js",[],"C:\\Users\\leo\\Desktop\\Capstone Project\\web-street-efficient\\src\\components\\NavigationHeader.js",[],"C:\\Users\\leo\\Desktop\\Capstone Project\\web-street-efficient\\src\\components\\RidersMap.js",[],"C:\\Users\\leo\\Desktop\\Capstone Project\\web-street-efficient\\src\\components\\OfficeEmployees.js",[],"C:\\Users\\leo\\Desktop\\Capstone Project\\web-street-efficient\\src\\components\\DispatchRiders.js",[],"C:\\Users\\leo\\Desktop\\Capstone Project\\web-street-efficient\\src\\components\\UserProfile.js",[],"C:\\Users\\leo\\Desktop\\Capstone Project\\web-street-efficient\\src\\components\\AddOfficeEmployee.js",["131"],"import React, { useState, useEffect } from 'react'\r\nimport {addOfficeEmployee} from '../store/actions/officeEmployeeAction'\r\nimport { activeTextSwitch, inactiveTextSwitch } from './CustomsStyles';\r\n\r\n//import '../styles/AddOfficeEmployee.scss'\r\n\r\nimport DatePicker from 'react-datepicker'\r\nimport 'react-datepicker/dist/react-datepicker.css'\r\nimport Select from 'react-select'\r\nimport Switch from 'react-switch'\r\nimport { connect } from 'react-redux'\r\n\r\n\r\nconst AddOfficeEmployee = (props) => {\r\n    const {show, close, branches, courierID, addOffice_Emp_Error, auth} = props\r\n    const [checked, setChecked] = useState(false)//for status\r\n    let displayName = auth.displayName;\r\n    let encodedBY = displayName.split(\"@\");\r\n\r\n\r\n    const [officeEmployeeSignup, setOfficeEmployeeSignup] = useState({\r\n        email : '',\r\n        fname : '',\r\n        mname :'',\r\n        lname :'',\r\n        address: '',\r\n        contactNumber: '',\r\n        birthdate: null,\r\n        gender: 'Male',\r\n        branch: '',\r\n        jobtitle: 'Office Clerk',\r\n        status: 'inactive',\r\n        courier_id: courierID,\r\n        encodedBY: encodedBY[1],\r\n    });  \r\n\r\n    useEffect(() => {\r\n        checked ? setOfficeEmployeeSignup({...officeEmployeeSignup, status: 'active'}) : setOfficeEmployeeSignup({...officeEmployeeSignup, status: 'inactive'});\r\n        // eslint-disable-next-line\r\n    }, [checked]);\r\n\r\n    // useEffect(() => {\r\n    //     if (!addOffice_Emp_Error){\r\n    //         setOfficeEmployeeSignup({\r\n    //             email : '',\r\n    //             fname : '',\r\n    //             mname :'',\r\n    //             lname :'',\r\n    //             address: '',\r\n    //             contactNumber: '',\r\n    //             birthdate: null,\r\n    //             gender: 'Male',\r\n    //             branch: '',\r\n    //             jobtitle: 'Office Clerk',\r\n    //             status: 'inactive',\r\n    //             courier_id: courierID,\r\n    //             encodedBY: encodedBY[1],\r\n    //         });\r\n    //         setChecked(false);\r\n    //     } // eslint-disable-next-line\r\n    // }, [addOffice_Emp_Error])\r\n\r\n    const handleOnChange = (e) =>{\r\n        setOfficeEmployeeSignup({...officeEmployeeSignup, [e.target.name]: e.target.value})\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        console.log(officeEmployeeSignup);\r\n        props.addOfficeEmployee(officeEmployeeSignup)   \r\n        \r\n        \r\n        setOfficeEmployeeSignup({\r\n            email : '',\r\n            fname : '',\r\n            mname :'',\r\n            lname :'',\r\n            address: '',\r\n            contactNumber: '',\r\n            birthdate: null,\r\n            gender: 'Male',\r\n            branch: '',\r\n            jobtitle: 'Office Clerk',\r\n            status: 'inactive',\r\n            courier_id: courierID,\r\n            encodedBY: encodedBY[1],\r\n        });\r\n        setChecked(false);\r\n    }\r\n   \r\n    const options = branches && Object.keys(branches).map(function (i) {\r\n        return {\r\n            value: branches[i].branch_name,\r\n            label: branches[i].branch_name\r\n        }\r\n      });\r\n     \r\n    return (\r\n        <div className=\"modal-wrapper\"\r\n            style={{\r\n                transform: show ? 'translateY(0vh)' : 'translateY(-150vh)',\r\n                opacity: show ? '1' : '0'\r\n            }}\r\n        >\r\n            <div className=\"modal-header\">\r\n                <h2>Add Office Employee</h2>\r\n                <span onClick={close} className=\"close-modal-btn\"> x </span>\r\n            </div>\r\n\r\n            <div className = \"modal-content\">\r\n                <form className = \"add-employee-form\" onSubmit ={handleSubmit}>\r\n                    <div className = \"employee-email-container\">\r\n                        <label>Email</label>\r\n                        <input type=\"email\"\r\n                            placeholder=\"Enter Email\" \r\n                            name=\"email\"\r\n                            value = {officeEmployeeSignup.email}\r\n                            required\r\n                            onChange = {handleOnChange} \r\n                        />\r\n                        \r\n                        <label>First Name</label>\r\n                        <input type=\"text\"\r\n                            placeholder=\"Enter First Name\" \r\n                            name=\"fname\"\r\n                            value = {officeEmployeeSignup.fname}\r\n                            required\r\n                            onChange = {handleOnChange} \r\n                        />\r\n\r\n                        <label>Middle Name</label>\r\n                        <input type=\"text\"\r\n                            placeholder=\"Enter Middle Name\" \r\n                            name=\"mname\"\r\n                            value = {officeEmployeeSignup.mname}\r\n                            required\r\n                            onChange = {handleOnChange} \r\n                        />\r\n\r\n                        <label>Last Name</label>\r\n                        <input type=\"text\"\r\n                            placeholder=\"Enter Last Name\" \r\n                            name=\"lname\"\r\n                            value = {officeEmployeeSignup.lname}\r\n                            required\r\n                            onChange = {handleOnChange} \r\n                        />\r\n\r\n                        <label>Address</label>\r\n                        <input type=\"text\"\r\n                            placeholder=\"Enter Address\" \r\n                            name=\"address\"\r\n                            value = {officeEmployeeSignup.address}\r\n                            required\r\n                            onChange = {handleOnChange} \r\n                        />\r\n\r\n                        \r\n                    </div>\r\n                    <div className = \"employee-contactNumber-container\">\r\n                        <label>Contact Number</label>\r\n                        <input type=\"text\"\r\n                            placeholder=\"Enter Contact Number\" \r\n                            name=\"contactNumber\"\r\n                            value = {officeEmployeeSignup.contactNumber}\r\n                            required\r\n                            onChange = {handleOnChange} \r\n                        />\r\n\r\n                        <label>Gender</label>  \r\n                        <select name=\"gender\" value = {officeEmployeeSignup.gender} onChange = {handleOnChange}>\r\n                            <option value=\"Male\">Male</option>\r\n                            <option value=\"Female\">Female</option>\r\n                        </select>\r\n\r\n                        <label>Job Title</label>\r\n                        <select name=\"jobtitle\" value = {officeEmployeeSignup.jobtitle} onChange = {handleOnChange}>\r\n                            <option value=\"Office Clerk\">Office Clerk</option>\r\n                            <option value=\"Manager\">Manager</option>\r\n                        </select>\r\n\r\n                        <label >Bith Date</label>\r\n                        <DatePicker\r\n                           // className = \"datepicker-birthdate\"\r\n                            selected = {officeEmployeeSignup.birthdate}\r\n                            onChange = {e =>  setOfficeEmployeeSignup({...officeEmployeeSignup, birthdate: e})}\r\n                            dateFormat = 'MM/dd/yyyy'\r\n                            placeholderText = \"Birthdate\"\r\n                            isClearable\r\n                            showYearDropdown\r\n                            scrollableYearDropdown\r\n                            maxDate = {new Date()}\r\n                        />\r\n\r\n                        <label> Company Branch</label>\r\n                        <Select \r\n                            classNamePrefix=\"mySelect\" \r\n                            options={options}\r\n                            placeholder = \"Choose company branch\" \r\n                            value =  {options && options.find(obj => obj.value === officeEmployeeSignup.branch)}\r\n                            onChange =  {e => setOfficeEmployeeSignup({...officeEmployeeSignup, branch: e.value})}\r\n                            isSearchable\r\n                            autoFocus\r\n                            maxMenuHeight = {250}\r\n                         />\r\n\r\n                        <div className = \"status-swtich-container\">\r\n                            <label className = \"employeestatus-switch\">Status:</label>\r\n                            <Switch \r\n                                className= \"react-swtich\"\r\n                                onChange = {checked => setChecked(checked)}\r\n                                checked = {checked}\r\n                                onHandleColor = \"#3981e5\"\r\n                                checkedIcon = {<div style = {activeTextSwitch}> active </div>}\r\n                                uncheckedIcon = {<div style = {inactiveTextSwitch}> inactive </div>}\r\n                                width = {90}\r\n                                height = {25}\r\n                            />\r\n\r\n                        </div>\r\n                       \r\n                    </div>\r\n                    <div className = \"modal-submit-container\">\r\n                        <button> Submit </button>\r\n                    </div>\r\n                </form>\r\n\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) =>{\r\n    console.log(state);\r\n    return{\r\n        branches: state.firestore.data.Branch,\r\n        courierID: state.courier.courierId,\r\n        addOffice_Emp_Error: state.officeEmployees.addOffice_Emp_Error, \r\n        auth: state.firebase.auth\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return{\r\n        addOfficeEmployee: (officeEmployeeSignup) => dispatch(addOfficeEmployee(officeEmployeeSignup)),\r\n    }\r\n} \r\n\r\n\r\n export default connect(mapStateToProps, mapDispatchToProps)(AddOfficeEmployee)\r\n","C:\\Users\\leo\\Desktop\\Capstone Project\\web-street-efficient\\src\\store\\reducers\\officeEmployeeReducer.js",[],"C:\\Users\\leo\\Desktop\\Capstone Project\\web-street-efficient\\src\\store\\actions\\officeEmployeeAction.js",[],"C:\\Users\\leo\\Desktop\\Capstone Project\\web-street-efficient\\src\\components\\AddDispatchRider.js",["132"],"import React, {useState, useEffect} from 'react'\r\nimport { useHistory } from 'react-router-dom';\r\nimport firebase from '../config/fbConfig'\r\nimport { activeTextSwitch, inactiveTextSwitch, customStyles } from './CustomsStyles';\r\nimport { addDispatchRiderInFirebase, SelectDesignateBarangay } from '../store/actions/dispatchRiderAction';\r\n\r\nimport DatePicker from 'react-datepicker'\r\nimport 'react-datepicker/dist/react-datepicker.css'\r\nimport Select from 'react-select'\r\nimport Switch from 'react-switch'\r\nimport { connect } from 'react-redux'\r\n\r\nconst AddDispatchRider = (props) => {\r\n    const {branches, courierID, auth, barangays, add_dispatchrider_Error} = props\r\n    const [checked, setChecked] = useState(false)//for status\r\n    let displayName = auth.displayName;\r\n    let encodedBY = displayName.split(\"@\");\r\n    const history  = useHistory();\r\n\r\n   \r\n    const [addDispatchRider, setAddDispatchRider] = useState({\r\n        fname : '',\r\n        mname :'',\r\n        lname :'',\r\n        email : '',\r\n        address: '',\r\n        contactNumber: '',\r\n        emerg_number: '',\r\n        birthdate: null,\r\n        gender: 'Male',\r\n        branch: '',\r\n        status: 'inactive',\r\n        designateBarangay: '',\r\n        courier_id: courierID,\r\n        encodedBY: encodedBY[1],\r\n        vehicle_type: 'Motorcycle',\r\n        cR : null,\r\n        oR: null,\r\n        license: null,\r\n        writtenExam: null,\r\n        actualAssessment: null\r\n    });  \r\n\r\n    useEffect(() => {\r\n        checked ? setAddDispatchRider({...addDispatchRider, status: 'active'}) : setAddDispatchRider({...addDispatchRider, status: 'inactive'});\r\n        // eslint-disable-next-line\r\n    }, [checked]);\r\n\r\n    // useEffect(() => {\r\n    //     if (!add_dispatchrider_Error){\r\n    //         setAddDispatchRider({\r\n    //             fname : '',\r\n    //             mname :'',\r\n    //             lname :'',\r\n    //             email : '',\r\n    //             address: '',\r\n    //             contactNumber: '',\r\n    //             emerg_number: '',\r\n    //             birthdate: null,\r\n    //             gender: 'Male',\r\n    //             branch: '',\r\n    //             status: 'inactive',\r\n    //             courier_id: courierID,\r\n    //             encodedBY: encodedBY[1],\r\n    //             vehicle_type: 'Motorcycle',\r\n    //             cR : null,\r\n    //             oR: null,\r\n    //             license: null,\r\n    //             writtenExam: null,\r\n    //             actualAssessment: null\r\n    //         });\r\n    //         setChecked(false);\r\n    //         imageInputRef.current.value = null;\r\n    //     } // eslint-disable-next-line\r\n    // }, [add_dispatchrider_Error])\r\n\r\n    const handleOnChange = (e) =>{\r\n        setAddDispatchRider({...addDispatchRider, [e.target.name]: e.target.value})\r\n    }\r\n\r\n    const handleCredsOnChange = async (e) =>{   \r\n        const file = e.target.files[0];\r\n        const storageRef = firebase.storage().ref();\r\n        const fileRef = storageRef.child(file.name);\r\n        await fileRef.put(file);    \r\n        setAddDispatchRider({...addDispatchRider, [e.target.name]: await fileRef.getDownloadURL()});\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        console.log(addDispatchRider);\r\n        props.addDispatchRiderInFirebase(addDispatchRider);\r\n\r\n                setAddDispatchRider({\r\n                fname : '',\r\n                mname :'',\r\n                lname :'',\r\n                email : '',\r\n                address: '',\r\n                contactNumber: '',\r\n                emerg_number: '',\r\n                birthdate: null,\r\n                gender: 'Male',\r\n                branch: '',\r\n                status: 'inactive',\r\n                designateBarangay: '',\r\n                courier_id: courierID,\r\n                encodedBY: encodedBY[1],\r\n                vehicle_type: 'Motorcycle',\r\n                cR : null,\r\n                oR: null,\r\n                license: null,\r\n                writtenExam: null,\r\n                actualAssessment: null\r\n            });\r\n            setChecked(false);\r\n\r\n            var inputElements = document.getElementsByTagName('input');\r\n\r\n            for (var i=0; i < inputElements.length; i++) {\r\n                if (inputElements[i].type === 'file') {\r\n                    inputElements[i].value = '';\r\n                }\r\n            }\r\n    }\r\n\r\n    const options = branches && Object.keys(branches).map(function (i) {\r\n        return {\r\n            value: branches[i].branch_name,\r\n            label: branches[i].branch_name,\r\n            cityID: branches[i].city_id\r\n        }\r\n      });\r\n\r\n    const onSelectChange  = (e) =>{\r\n        setAddDispatchRider({...addDispatchRider, branch: e.value});\r\n        props.SelectDesignateBarangay(e.cityID)\r\n    }\r\n    var nobarangay = true;\r\n    var optionBarangay;\r\n\r\n    if(barangays){\r\n        optionBarangay = barangays && Object.keys(barangays).map(function (i) {\r\n            return {\r\n                value: barangays[i].brgyname,\r\n                label: barangays[i].brgyname\r\n            }\r\n        });\r\n        nobarangay  = false;\r\n    }\r\n  \r\n      \r\n    return (\r\n        <div className = \"addDR-container\">\r\n           <div className = \"addDR-header\">\r\n                <h1>Dispatch Rider Registration</h1>\r\n           </div>\r\n           <div className = \"addDR-form\">\r\n               <form onSubmit = {handleSubmit}>\r\n                   <div>\r\n                       <h2>Information</h2>\r\n                   </div>\r\n                   <div className = \"addDR-inputs-info\">\r\n                        <div className = \"addDR-inputs-name\">\r\n                            <div>\r\n                                <label>First Name</label>\r\n                                <input type=\"text\"\r\n                                    placeholder=\"Enter First Name\" \r\n                                    name=\"fname\"                             \r\n                                    required   \r\n                                    value = {addDispatchRider.fname}\r\n                                    onChange = {handleOnChange}   \r\n                                />\r\n                            </div>\r\n                            <div>\r\n                                <label>Middle Name</label>\r\n                                <input type=\"text\"\r\n                                    placeholder=\"Enter Middle Name\" \r\n                                    name=\"mname\"                        \r\n                                    required  \r\n                                    value = {addDispatchRider.mname}\r\n                                    onChange = {handleOnChange}                             \r\n                                />\r\n\r\n                            </div>\r\n                            <div>\r\n                                <label>Last Name</label>\r\n                                <input type=\"text\"\r\n                                    placeholder=\"Enter Last Name\" \r\n                                    name=\"lname\"                        \r\n                                    required   \r\n                                    value = {addDispatchRider.lname}\r\n                                    onChange = {handleOnChange}                               \r\n                                />\r\n                            </div>                          \r\n                        </div>\r\n                        <div className = \"addDR-input-email\">\r\n                            <label>Email</label>\r\n                            <input type=\"email\"\r\n                                placeholder=\"Enter Email\" \r\n                                name=\"email\"\r\n                                required\r\n                                value = {addDispatchRider.email}\r\n                                onChange = {handleOnChange}   \r\n                            />\r\n                        </div>\r\n                        <div className = \"addDR-input-address\">\r\n                            <label>Address</label>\r\n                            <input type=\"text\"\r\n                                placeholder=\"Enter Address\" \r\n                                name=\"address\"\r\n                                required\r\n                                value = {addDispatchRider.address}\r\n                                onChange = {handleOnChange}   \r\n                            />\r\n                        </div>\r\n                        <div className = \"addDR-inputs-contact\">\r\n                            <div>\r\n                                <label>Contact Number</label>\r\n                                <input type=\"text\"\r\n                                    placeholder=\"Enter Contact Number\" \r\n                                    name=\"contactNumber\"                             \r\n                                    required      \r\n                                    value = {addDispatchRider.contactNumber}\r\n                                    onChange = {handleOnChange}   \r\n                                />\r\n                            </div>\r\n                            <div>\r\n                                <label>Emergency Contact Number</label>\r\n                                <input type=\"text\"\r\n                                    placeholder=\"Enter Emergency Number\" \r\n                                    name=\"emerg_number\"                        \r\n                                    required       \r\n                                    value = {addDispatchRider.emerg_number}\r\n                                    onChange = {handleOnChange}                        \r\n                                />\r\n                            </div>                          \r\n                        </div>\r\n                        <div className = \"addDR-inputs-gender\">\r\n                            <div>\r\n                                <label>Gender</label>  \r\n                                <select name=\"gender\"  value = {addDispatchRider.gender} onChange = {handleOnChange}    >\r\n                                    <option value=\"Male\">Male</option>\r\n                                    <option value=\"Female\">Female</option>\r\n                                </select>   \r\n                            </div>\r\n                            <div>\r\n                                <label className =\"label-date\" >Bith Date</label>\r\n                                <DatePicker\r\n                                    className = \"datepicker-birthdate\"     \r\n                                    selected = {addDispatchRider.birthdate}    \r\n                                    onChange = {e =>  setAddDispatchRider({...addDispatchRider, birthdate: e})}       \r\n                                    dateFormat = 'MM/dd/yyyy'\r\n                                    placeholderText = \"Birthdate\"\r\n                                    isClearable\r\n                                    showYearDropdown\r\n                                    scrollableYearDropdown   \r\n                                    maxDate = {new Date()}                            \r\n                                />\r\n                            </div>                                            \r\n                        </div>\r\n                        <div className = \"addDR-input-branch\">\r\n                            <div className = \"mySelect\">\r\n                                <label> Company Branch</label>\r\n                                <Select \r\n                                    styles={customStyles}\r\n                                    options={options}\r\n                                    classNamePrefix=\"mySelect\"                                     \r\n                                    placeholder = \"Choose company branch\"    \r\n                                    value =  {options && options.find(obj => obj.value === addDispatchRider.branch)}\r\n                                    onChange = {onSelectChange}                  \r\n                                    isSearchable\r\n                                    autoFocus\r\n                                    maxMenuHeight = {250}\r\n                                />\r\n                            </div>\r\n                            <div className = \"addDR-switch\">\r\n                                <label>Status:</label>\r\n                                <Switch \r\n                                    className= \"react-swtich\"\r\n                                    onHandleColor = \"#3981e5\"  \r\n                                    onChange = {checked => setChecked(checked)}\r\n                                    checked = {checked}             \r\n                                    checkedIcon = {<div style = {activeTextSwitch}> active </div>}\r\n                                    uncheckedIcon = {<div style = {inactiveTextSwitch}> inactive </div>}          \r\n                                    width = {90}\r\n                                    height = {25}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                        <div>\r\n                            <div className = \"mySelect\">\r\n                                <label> Designate Barangay</label>\r\n                                <Select \r\n                                    styles={customStyles}\r\n                                    options={optionBarangay}\r\n                                    classNamePrefix=\"mySelect\"                                     \r\n                                    placeholder = \"Choose designate Barangay\"    \r\n                                    value =  {optionBarangay && optionBarangay.find(obj => obj.value === addDispatchRider.designateBarangay)}\r\n                                    onChange = {e => setAddDispatchRider({...addDispatchRider, designateBarangay: e.value})}                   \r\n                                    isSearchable\r\n                                    autoFocus\r\n                                    maxMenuHeight = {250}\r\n                                />\r\n                                 <div className = \"Errormessage\">\r\n                                    { nobarangay ? <span> Select Warehouse Branch First! </span> : <span> </span> }\r\n                                </div>  \r\n                            </div>\r\n                        </div>\r\n                   </div>\r\n                   <hr />\r\n                    <div>\r\n                        <h2>Credential</h2>\r\n                    </div>\r\n                    <div className = \"addDR-inputs-creds\">\r\n                        \r\n                            <div>\r\n                                <label> Vehicle Type: </label>  \r\n                                <select name=\"vehicle_type\" value = {addDispatchRider.vehicle_type} onChange ={handleOnChange}>\r\n                                    <option value=\"Motorcycle\">Motorcycle</option>\r\n                                    <option value=\"Truck\">Truck</option>\r\n                                </select>  \r\n                            </div>\r\n                             <div>\r\n                                <label> Actual Assessment: </label>  \r\n                                <input type=\"file\" \r\n                                    name=\"actualAssessment\"                        \r\n                                    required    \r\n                                    onChange ={handleCredsOnChange}   \r\n                                                      \r\n                                />\r\n                             </div>\r\n                      \r\n                       \r\n                            <div>\r\n                                <label> Written Exam Result: </label>  \r\n                                <input type=\"file\" \r\n                                    name=\"writtenExam\"                        \r\n                                    required       \r\n                                    onChange = {handleCredsOnChange}   \r\n                                                     \r\n                                /> \r\n                            </div>\r\n                             <div>\r\n                                <label> License: </label>  \r\n                                    <input type=\"file\" \r\n                                    name=\"license\"                        \r\n                                    required   \r\n                                    onChange = {handleCredsOnChange}   \r\n                                                              \r\n                                />\r\n                             </div>\r\n                        \r\n                            <div>\r\n                                <label> Official Receipt: </label>  \r\n                                <input type=\"file\" \r\n                                    name=\"oR\"                        \r\n                                    required \r\n                                    onChange = {handleCredsOnChange}                                                                   \r\n                                /> \r\n                            </div>\r\n                             <div>\r\n                                <label> Certificate of Registration: </label>  \r\n                                <input type=\"file\" \r\n                                    name=\"cR\"                        \r\n                                    required   \r\n                                    onChange = {handleCredsOnChange}                                                             \r\n                                />\r\n                             </div>\r\n                        \r\n                    </div>\r\n                    <hr />\r\n                    <div className = \"btn-submit\">\r\n                        <button className = \"btn-primary\">Submit</button>\r\n                    </div>\r\n               </form>\r\n           </div>\r\n           <div className = \"addDR-back\">\r\n                <button className = \"btn-primary\" onClick = {() => {history.push('/dispatchRiders')}}>Back</button>\r\n           </div>\r\n        </div>\r\n    )\r\n}\r\nconst mapStateToProps = (state) =>{\r\n    console.log(state);\r\n    return{\r\n        branches: state.firestore.data.Branch,\r\n        courierID: state.courier.courierId,\r\n        auth: state.firebase.auth,\r\n        add_dispatchrider_Error: state.dispatchRider.add_DispatchRider_Error,\r\n        barangays: state.dispatchRider.barangays\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return{\r\n        addDispatchRiderInFirebase: (addDispatchRider) => dispatch(addDispatchRiderInFirebase(addDispatchRider)),\r\n        SelectDesignateBarangay: (cityID) => dispatch(SelectDesignateBarangay(cityID)),\r\n    }\r\n} \r\n\r\n\r\n export default connect(mapStateToProps, mapDispatchToProps)(AddDispatchRider)\r\n\r\n\r\n\r\n","C:\\Users\\leo\\Desktop\\Capstone Project\\web-street-efficient\\src\\store\\reducers\\dispatchRiderReducer.js",[],"C:\\Users\\leo\\Desktop\\Capstone Project\\web-street-efficient\\src\\components\\CustomsStyles.js",[],"C:\\Users\\leo\\Desktop\\Capstone Project\\web-street-efficient\\src\\store\\actions\\dispatchRiderAction.js",[],"C:\\Users\\leo\\Desktop\\Capstone Project\\web-street-efficient\\src\\components\\AddItem.js",[],"C:\\Users\\leo\\Desktop\\Capstone Project\\web-street-efficient\\src\\store\\reducers\\itemReducer.js",[],"C:\\Users\\leo\\Desktop\\Capstone Project\\web-street-efficient\\src\\store\\actions\\itemAction.js",[],"C:\\Users\\leo\\Desktop\\Capstone Project\\web-street-efficient\\src\\components\\AddItemToPrint.js",["133"],"C:\\Users\\leo\\Desktop\\Capstone Project\\web-street-efficient\\src\\components\\ItemPrint.js",[],{"ruleId":"134","replacedBy":"135"},{"ruleId":"136","replacedBy":"137"},{"ruleId":"138","severity":1,"message":"139","line":15,"column":46,"nodeType":"140","messageId":"141","endLine":15,"endColumn":65},{"ruleId":"138","severity":1,"message":"142","line":14,"column":50,"nodeType":"140","messageId":"141","endLine":14,"endColumn":73},{"ruleId":"138","severity":1,"message":"143","line":7,"column":15,"nodeType":"140","messageId":"141","endLine":7,"endColumn":23},"no-native-reassign",["144"],"no-negated-in-lhs",["145"],"no-unused-vars","'addOffice_Emp_Error' is assigned a value but never used.","Identifier","unusedVar","'add_dispatchrider_Error' is assigned a value but never used.","'inputRef' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]